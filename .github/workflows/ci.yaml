name: ci

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - beta
      - next

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: asdf-vm/actions/install@v3
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.6'
      - uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          skip-cache: false
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: asdf-vm/actions/install@v3
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.6'
      - run: make test
  test-acceptance:
    runs-on: ubuntu-latest
    steps:
      - run: dd if=/dev/zero of=/tmp/zfsstorage bs=524288000 count=1 # 500mb storage
      - run: sudo apt-get update
      - run: sudo apt install zfsutils-linux
      - run: sudo zpool create zfs-pool2 /tmp/zfsstorage
      - run: sudo zfs create zfs-pool2/unencrypted
      - run: echo "ddddddddddddddddddddddddddddddd" > /tmp/zfs-key
      - run: sudo zfs create -o encryption=on -o keylocation=file:///tmp/zfs-key -o keyformat=raw -u -v zfs-pool2/encrypted
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: asdf-vm/actions/install@v3
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.6'
      - run: sudo make test-acceptance
  release:
    runs-on: ubuntu-latest
    needs: [ lint, test, test-acceptance ]
    if: github.ref == 'refs/heads/beta' || github.ref == 'refs/heads/next'
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: asdf-vm/actions/install@v3
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.6'
      - uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: git reset --hard && git clean -fdx
      - uses: goreleaser/goreleaser-action@v6
        if: steps.semantic.outputs.new_release_published == 'true'
        with:
          distribution: goreleaser
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/beta'
    needs: [ release ]
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}